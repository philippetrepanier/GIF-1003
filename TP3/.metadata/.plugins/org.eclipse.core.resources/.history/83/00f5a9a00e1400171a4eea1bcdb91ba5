/**
 * \file Entraineur.cpp
 * \brief
 * \author etudiant
 * \date 2017-03-28
 */

#include "Entraineur.h"
#include <sstream>
static const long JOURS_POUR_18_ANS = long(-18 * 365.25);

using namespace std;

namespace tp
{

Entraineur::Entraineur(const std::string& p_nom, const std::string& p_prenom, const util::Date& p_dateNaissance,
		const std::string& p_telephone, const std::string& p_numRAMQ, char p_sexe) :
		Personne(p_nom, p_prenom, p_dateNaissance, p_telephone), m_sexe(p_sexe)
{
	PRECONDITION(util::validerFormatNom(p_prenom));
	PRECONDITION(util::validerFormatNom(p_prenom));
	PRECONDITION(util::validerTelephone(p_telephone));
	PRECONDITION(
			util::Date::validerDate(p_dateNaissance.reqJour(), p_dateNaissance.reqMois(), p_dateNaissance.reqAnnee()));
	PRECONDITION(
			util::validerNumRAMQ(p_telephone, p_nom, p_prenom, p_dateNaissance.reqJour(), p_dateNaissance.reqMois(),
					p_dateNaissance.reqAnnee(), p_sexe));

	util::Date datePour18 = util::Date
	dateAujourdhui();
}
Entraineur::~Entraineur()
{
// TODO Auto-generated destructor stub
}

std::string Entraineur::reqPersonneFormate()
{
	ostringstream os;
	os << Personne::reqPersonneFormate();

	os << "Numero de RAMQ    : " << Entraineur::reqNumRamq() << endl;

	return os.str();
}

const std::string& Entraineur::reqNumRamq() const
{
	return m_numRAMQ;
}

Personne* Entraineur::clone() const
{
	return new Entraineur(*this);
}

} /* namespace tp */
